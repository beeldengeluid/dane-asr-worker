# Important for understanding DANE configs: https://github.com/CLARIAH/DANE/blob/main/DANE/config.py
#   FIRST the config in the python module dane.cfg.cfg is used
#   THEN the home dir config is applied (~/.DANE/config.yml),
#   THEN the base_config.yml will overwrite anything,
#   THEN the local config.yml
#
# Therefore, we use:
# - For local testing: a local config.yml (copy based on this file)
# - In k8s mode: create a k8s ConfigMap (--from-file config.yml) and mount it in ~/.DANE/config.yml
#
# Note: it does not seem possible to mount a ConfigMap in the root dir of the worker, so
#       base_config.yml and config.yml are in .dockerignore (so they cannot overwrite ~/.DANE/config.yml)
#
# Note: For local testing, copy this file to config.yml (in main dir of this repo)
RABBITMQ: # common settings for each DANE worker to connect to DANE-server RabbitMQ server
    HOST: 'localhost' # when testing
    PORT: 5672  # RMQ default
    EXCHANGE: 'DANE-exchange' # DANE-server default
    RESPONSE_QUEUE: 'DANE-response-queue' # DANE-server default
    USER: 'guest' # RMQ default
    PASSWORD: 'guest' # RMQ default
ELASTICSEARCH: # common settings for each DANE worker to connect to DANE-server Elasticsearch cluster
    HOST: ['localhost'] # define k8s Endpoint with this name to connect external ES cluster
    PORT: 9200 # ES default
    USER: '' # ES default
    PASSWORD: '' # ES default
    SCHEME: 'http' # connection protocol for ELASTICSEARCH.HOST
    INDEX: 'dane-index-ENVIRONMENT-NAME' # suggestion: use a simple prefix followed by environment name
LOCAL_KALDI:  # TODO use this in worker.py
    ASR_PACKAGE_NAME: 'asr-features.tar.gz'
    ASR_WORD_JSON_FILE: 'words.json'
    # (as module) kaldi NL base dir and the decoder script therein
    KALDI_NL_DIR: '/opt/Kaldi_NL'
    KALDI_NL_DECODER: 'decode_OH.sh'  # 'decode.sh'
    KALDI_NL_MODEL_DIR: '/models'  # language models will be downloaded here (should be /mnt/dane-fs/models when kaldi_nl supports this)
    KALDI_NL_MODEL_FETCHER: 'entrypoint.sh'
FILE_SYSTEM:
    BASE_MOUNT: 'mount' #'mount' when running locally
    INPUT_DIR: 'input-files'
    OUTPUT_DIR: 'output-files/asr-output'
PATHS: # common settings for each DANE worker to define input/output dirs (with a common mount point)
    TEMP_FOLDER: "./mount" # directory is automatically created (use ./mount for local testing)
    OUT_FOLDER: "./mount" # directory is automatically created (use ./mount for local testing)
INPUT:
    DELETE_ON_COMPLETION: True # this param is optional, will be defaulted to False if absent
OUTPUT:
    DELETE_ON_COMPLETION: True # this param is optional, will be defaulted to False if absent
    TRANSFER_ON_COMPLETION: True
    S3_ENDPOINT_URL: "http://localhost:9000"
    S3_BUCKET: "test-bucket"  # bucket reserved for 1 type of output
    S3_FOLDER_IN_BUCKET: "assets"  # folder within the bucket
DANE_DEPENDENCIES: ['DOWNLOAD'] # this param is optional, will be defaulted to [] if absent
